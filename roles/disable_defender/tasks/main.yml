---

# USE AT OWN RISK AS IS WITHOUT WARRANTY OF ANY KIND !!!!!
# https://technet.microsoft.com/en-us/itpro/powershell/windows/defender/set-mppreference

- name: Disable UAC 
  win_command: cmd.exe /c "C:\Windows\System32\cmd.exe /k %windir%\System32\reg.exe ADD HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System /v EnableLUA /t REG_DWORD /d 0 /f" 

- name: Check if Machine has Tamper Protection 
  win_shell: powershell Get-MpComputerStatus | findstr /i "IsTamperProtected"
  register: tamper_results
  when: '"Server" not in ansible_distribution'

- name: Print Tamper Setting
  ansible.builtin.debug:
    msg: '{{ tamper_results.stdout_lines }}'
  when: '"Server" not in ansible_distribution'
 
- block:
    - name: End Play if Tamper Protections is On
      debug:
        msg: You will need to disable this manaully in Windows Security
    - meta: end_play
  when: 
  - '"Server" not in ansible_distribution'
  - '": True" in tamper_results.stdout'

- name: Check if UAC is Enabled  
  win_shell: powershell (Get-ItemProperty HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System).EnableLUA 
  register: uac_results

- name: Disable UAC
  ansible.windows.win_regedit:
    path: HKLM:\Software\Microsoft\Windows\CurrentVersion\Policies\System
    name: EnableLUA 
    data: 0
    type: dword
  when: "'1' in uac_results.stdout"

- name: Check if Machine needs Reboot 
  win_shell: powershell Get-MpComputerStatus | findstr /i "RebootRequired"
  register: reboot_results
  when: '"Server" not in ansible_distribution'

- name: Disable Windows Defender Antivirus 
  win_command: powershell.exe Set-MpPreference -DisableRealtimeMonitoring $true 
  ignore_errors: true

- name: Turn off behavior monitoring 
  win_command: powershell.exe Set-MpPreference -DisableBehaviorMonitoring $true 
  ignore_errors: true

- name: Disable scanning all downloaded files and attachments 
  win_command: powershell.exe Set-MpPreference -DisableIOAVProtection $true 
  ignore_errors: true

- name: Disable automatic updating of signatures 
  win_command: powershell.exe Set-MpPreference -SignatureDisableUpdateOnStartupWithoutEngine $true 
  ignore_errors: true

- name: Disable cloud-based protection 
  win_command: powershell.exe Set-MpPreference -DisablePrivacyMode $true 
  ignore_errors: true

- name: Disable Windows Defender SmartScreen for Edge 
  win_command: powershell.exe Set-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Windows\System" -Name "EnableSmartScreen" -Value 0 -Type DWord 
  ignore_errors: true

- name: Disable Windows Defender SmartScreen for apps and files 
  win_command: powershell.exe Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer" -Name "SmartScreenEnabled" -Value "Off" -Type String 
  ignore_errors: true

# To also disable Windows Defender Security Center include this
- name: Disable Real-time protection 
  become: yes
  become_method: runas
  ansible.windows.win_regedit:
    path: HKLM:\Software\Policies\Microsoft\Windows Defender
    state: absent
    delete_key: true
  vars:
    ansible_become_user: 'skt\evals_domain_admin'
    ansible_become_pass: 'DuapQj7k8Va8U1X27rw6'
  ignore_errors: true

- name: Anti Spyware 
  ansible.windows.win_regedit:
    path: HKLM:\Software\Policies\Microsoft\Windows Defender
    name: DisableAntiSpyware
    data: 1
    type: dword
  ignore_errors: true
  
- name: Anti Virus 
  ansible.windows.win_regedit:
    path: HKLM:\Software\Policies\Microsoft\Windows Defender
    name: DisableAntiVirus
    data: 0
    type: dword
  ignore_errors: true
  
- name: MpEnablePus 
  ansible.windows.win_regedit:
    path: HKLM:\Software\Policies\Microsoft\Windows Defender\MpEngine
    name: MpEnablePus 
    data: 0
    type: dword
  ignore_errors: true
  
- name: DisableBehaviorMonitoring 
  ansible.windows.win_regedit:
    path: HKLM:\Software\Policies\Microsoft\Windows Defender\Real-Time Protection
    name: DisableBehaviorMonitoring 
    data: 1
    type: dword
  ignore_errors: true
  
- name: DisableIOAVProtection 
  ansible.windows.win_regedit:
    path: HKLM:\Software\Policies\Microsoft\Windows Defender\Real-Time Protection
    name: DisableIOAVProtection 
    data: 1
    type: dword
  ignore_errors: true
  
- name: DisableOnAccessProtection 
  ansible.windows.win_regedit:
    path: HKLM:\Software\Policies\Microsoft\Windows Defender\Real-Time Protection
    name: DisableOnAccessProtection
    data: 1
    type: dword
  ignore_errors: true
  
- name: DisableRealtimeMonitoring 
  ansible.windows.win_regedit:
    path: HKLM:\Software\Policies\Microsoft\Windows Defender\Real-Time Protection
    name: DisableRealtimeMonitoring 
    data: 1
    type: dword
  ignore_errors: true
  
- name: DisableScanOnRealtimeEnable 
  ansible.windows.win_regedit:
    path: HKLM:\Software\Policies\Microsoft\Windows Defender\Real-Time Protection
    name: DisableScanOnRealtimeEnable 
    data: 1
    type: dword
  ignore_errors: true
  
- name: DisableEnhancedNotifications
  ansible.windows.win_regedit:
    path: HKLM:\Software\Policies\Microsoft\Windows Defender\Reporting
    name: DisableEnhancedNotifications 
    data: 1
    type: dword
  ignore_errors: true
  
- name: DisableBlockAtFirstSeen 
  ansible.windows.win_regedit:
    path: HKLM:\Software\Policies\Microsoft\Windows Defender\SpyNet
    name: DisableBlockAtFirstSeen 
    data: 1
    type: dword
  ignore_errors: true
  
- name: SpynetReporting 
  ansible.windows.win_regedit:
    path: HKLM:\Software\Policies\Microsoft\Windows Defender\SpyNet
    name: SpynetReporting 
    data: 0
    type: dword
  ignore_errors: true
  
- name: SubmitSamplesConsent 
  ansible.windows.win_regedit:
    path: HKLM:\Software\Policies\Microsoft\Windows Defender\SpyNet
    name: SubmitSamplesConsent 
    data: 0
    type: dword
  ignore_errors: true
  
#- name: 0 Disable API Logging
#  become: yes
#  become_method: runas
#  ansible.windows.win_regedit:
#    path: HKLM:\System\CurrentControlSet\Control\WMI\Autologger\DefenderApiLogger
#    name: Start 
#    data: 0
#    type: dword
#  vars:
#    ansible_become_user: 'skt\evals_domain_admin'
#    ansible_become_pass: 'DuapQj7k8Va8U1X27rw6'
  
- name: 0 Disable Audit Logging
  ansible.windows.win_regedit:
    path: HKLM:\System\CurrentControlSet\Control\WMI\Autologger\DefenderAuditLogger
    name: Start 
    data: 0
    type: dword
  ignore_errors: true
  
#  # Disable WD Tasks
#- name: Disable ExploitGuard MDM policy Refresh 
#  community.windows.win_scheduled_task:
#    name: "ExploitGuard MDM policy Refresh"
#    enabled: no

- name: Disable Windows Defender Cache Maintenance 
  community.windows.win_scheduled_task:
    name: "Windows Defender Cache Maintenance"
    enabled: no
  ignore_errors: true

- name: Disable Windows Defender Cleanup 
  community.windows.win_scheduled_task:
    name: "Windows Defender Cleanup"
    enabled: no
  ignore_errors: true

- name: Disable Windows Defender Scheduled Scan 
  community.windows.win_scheduled_task:
    name: "Windows Defender Scheduled Scan"
    enabled: no
  ignore_errors: true

- name: Disable Windows Defender Verification 
  community.windows.win_scheduled_task:
    name: "Windows Defender Verification"
    enabled: no
  ignore_errors: true

#    - schtasks /Change /TN "Microsoft\Windows\ExploitGuard\ExploitGuard MDM policy Refresh" /Disable
#    - schtasks /Change /TN "Microsoft\Windows\Windows Defender\Windows Defender Cache Maintenance" /Disable
#    - schtasks /Change /TN "Microsoft\Windows\Windows Defender\Windows Defender Cleanup" /Disable
#    - schtasks /Change /TN "Microsoft\Windows\Windows Defender\Windows Defender Scheduled Scan" /Disable
#    - schtasks /Change /TN "Microsoft\Windows\Windows Defender\Windows Defender Verification" /Disable
      
- name: Disable WD systray icon
  ansible.windows.win_regedit:
    path: HKLM:\Software\Microsoft\Windows\CurrentVersion\Explorer\StartupApproved\Run
    name: Windows Defender
    state: absent
    delete_key: true
  ignore_errors: true

- name: Disable Windows Defender
  ansible.windows.win_regedit:
    path: HKLM:\Software\Microsoft\Windows\CurrentVersion\Run
    name: Windows Defender
    state: absent
    delete_key: true
  ignore_errors: true

- name: Disable Windows Defender
  ansible.windows.win_regedit:
    path: HKLM:\Software\Microsoft\Windows\CurrentVersion\Run
    name: WindowsDefender
    state: absent
    delete_key: true
  ignore_errors: true

- name: Remove WD context menu
  ansible.windows.win_regedit:
    path: HKCR:\*\shellex\ContextMenuHandlers\EPP
    state: absent
    delete_key: true
  ignore_errors: true

- name: Remove WD context menu
  ansible.windows.win_regedit:
    path: HKCR:\Directory\shellex\ContextMenuHandlers\EPP
    state: absent
    delete_key: true
  ignore_errors: true

- name: Remove WD context menu
  ansible.windows.win_regedit:
    path: HKCR:\Drive\shellex\ContextMenuHandlers\EPP
    state: absent
    delete_key: true
  ignore_errors: true

## Not working
#- name: Disable WD services
#  ansible.windows.win_regedit:
#    path: HKLM:\System\CurrentControlSet\Services\WdBoot
#    name: Start 
#    data: 4
#    type: dword
  
#- name: Disable WdFilter
#  ansible.windows.win_regedit:
#    path: HKLM:\System\CurrentControlSet\Services\WdFilter
#    name: Start 
#    data: 4
#    type: dword
  
#- name: Disable WdNisDrv
#  ansible.windows.win_regedit:
#    path: HKLM:\System\CurrentControlSet\Services\WdNisDrv
#    name: Start 
#    data: 4
#    type: dword
#  
#- name: Disable WinDefend
#  ansible.windows.win_regedit:
#    path: HKLM:\System\CurrentControlSet\Services\WinDefend
#    name: Start 
#    data: 4
#    type: dword
#  
#- name: Disable SecurityHealthService 
#  ansible.windows.win_regedit:
#    path: HKLM:\System\CurrentControlSet\Services\SecurityHealthService
#    name: Start 
#    data: 4
#    type: dword
  
- name: Reboot to complete MS Defender Removal 
  ansible.windows.win_reboot:
    reboot_timeout: 3600
