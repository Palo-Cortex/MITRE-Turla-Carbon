---

- name: Check Install Exchange script exists
  win_stat:
    path: C:\Windows\Temp\brieftragerin-install-exchange.ps1
  register: exchange_installer

- name: Check if Exchange is Installed 
  become: yes
  become_method: runas
  vars:
    ansible_become_user: 'skt\evals_domain_admin'
    ansible_become_pass: 'DuapQj7k8Va8U1X27rw6'
  win_command: powershell.exe -ExecutionPolicy ByPass -Command Add-PSSnapin Microsoft.Exchange.Management.PowerShell.SnapIn; Get-ExchangeServer | Format-List AdminDisplayVersion 
  ignore_errors: true
  register: exchange_results

- name: Check Exchange ISO 
  win_stat:
    path: C:\Windows\Temp\EXCHANGE2019.ISO 
  register: exchange_iso

- name: Download Exchange ISO
  win_get_url:
    url: https://download.microsoft.com/download/b/c/7/bc766694-8398-4258-8e1e-ce4ddb9b3f7d/ExchangeServer2019-x64-CU12.ISO
    dest: C:\Windows\Temp\EXCHANGE2019.ISO
  when: exchange_iso.stat.exists == False

- name: ensure Exchange Base features are present
  ansible.windows.win_feature:
    name: Server-Media-Foundation 
    state: present
    include_sub_features: true
    include_management_tools: true
  register: base_exchange_feature_install        

- name: If Exchange Base Features "requires a restart" Then Restart and Try again  
  ansible.windows.win_reboot:
    reboot_timeout: 3600
  when: base_exchange_feature_install.reboot_required
        
- name: ensure Exchange WAS Process Model features are present
  ansible.windows.win_feature:
    name: WAS-Process-Model 
    state: present
    include_sub_features: true
    include_management_tools: true
  register: wpm_exchange_feature_install        

- name: If Exchange WAS Process Model "requires a restart" Then Restart and Try again  
  ansible.windows.win_reboot:
    reboot_timeout: 3600
  when: wpm_exchange_feature_install.reboot_required

- name: set Exchange HTTP Features 
  set_fact:
    http_exchange_features:
      - Web-Http-Errors
      - Web-Http-Logging
      - Web-Http-Redirect
      - Web-Http-Tracing

- name: ensure Exchange HTTP features are present
  win_feature:
    name: '{{ http_exchange_features }}'
    state: present
  register: http_exchange_feature_install        
        
- name: set Exchange Support Features
  set_fact:
    support_exchange_features:
      - Web-Asp-Net45
      - Web-Basic-Auth
      - Web-Client-Auth
      - Web-Digest-Auth
      - Web-Dir-Browsing
      - Web-Dyn-Compression

- name: ensure Exchange Support features are present
  win_feature:
    name: '{{ support_exchange_features }}'
    state: present
  register: support_exchange_feature_install        
        
- name: set Exchange Admin Features
  set_fact:
    admin_exchange_features:
      - Web-Server
      - Web-Stat-Compression
      - Web-Static-Content
      - Web-Windows-Auth
      - Web-WMI

- name: ensure Exchange Admin features are present
  win_feature:
    name: '{{ admin_exchange_features }}'
    state: present
  register: admin_exchange_feature_install        
        
- name: set Exchange Management Features
  set_fact:
    mgmt_exchange_features:
      - Web-Metabase
      - Web-Mgmt-Console
      - Web-Mgmt-Compat
      - Web-Mgmt-Service

- name: ensure Exchange Management features are present
  win_feature:
    name: '{{ mgmt_exchange_features }}'
    state: present
  register: mgmt_exchange_feature_install        
        
- name: set Exchange Win Features
  set_fact:
    win_exchange_features:
      - Web-Net-Ext45
      - Web-Request-Monitor
      - NET-Framework-45-Features
      - RPC-over-HTTP-proxy

- name: ensure Exchange Win features are present
  win_feature:
    name: '{{ win_exchange_features }}'
    state: present
  register: win_exchange_feature_install        
        
- name: set Exchange RSAT Features
  set_fact:
    rsat_exchange_features:
      - RSAT-Clustering
      - RSAT-Clustering-CmdInterface
      - RSAT-Clustering-PowerShell
      - RSAT-ADDS
 
- name: ensure Exchange RSAT features are present
  win_feature:
    name: '{{ rsat_exchange_features }}'
    state: present
  register: rsat_exchange_feature_install        
        
- name: set Exchange ISAPI Features
  set_fact:
    isapi_exchange_features:
      - Web-ISAPI-Ext
      - Web-ISAPI-Filter 

- name: ensure Exchange ISAPI features are present
  win_feature:
    name: '{{ isapi_exchange_features }}'
    state: present
  register: isapi_exchange_feature_install        
        
- block:
  - name: install Microsoft Unified Communications Management API 4.0 
    win_chocolatey:
      name:
      - ucma4
      - dotnetfx
      - vcredist2012
      - msvisualcplusplus2013-redist
      - urlrewrite
      state: present
    register: pri_ms_ucm_install

- name: Reboot Exchange Server
  ansible.windows.win_reboot:
    reboot_timeout: 3600
  when: pri_ms_ucm_install is changed

- name: Ensure the Exchange ISO is mounted
  become: yes
  become_method: runas
  vars:
    ansible_become_user: 'skt\evals_domain_admin'
    ansible_become_pass: 'DuapQj7k8Va8U1X27rw6'
  community.windows.win_disk_image:
    image_path: C:\Windows\Temp\EXCHANGE2019.ISO 
    state: present
  register: disk_image_out

- name: Prepare AD from {{ disk_image_out.mount_paths[0] }}Setup.EXE
  win_package:
    path: '{{ disk_image_out.mount_paths[0] }}Setup.EXE'
    arguments: >-
      /IAcceptExchangeServerLicenseTerms_DiagnosticDataOFF
      /PrepareAD
      /OrganizationName:"skt"
    product_id: '{CD981244-E9B8-405A-9026-6AEB9DCEF1F1}' 
    state: present
  become: yes 
  become_method: runas
  vars:
    ansible_become_user: 'skt\evals_domain_admin'
    ansible_become_pass: 'DuapQj7k8Va8U1X27rw6'
  when: "'Version' not in exchange_results.stdout"
    
- name: Install Exchange from {{ disk_image_out.mount_paths[0] }}Setup.EXE
  win_package:
    path: '{{ disk_image_out.mount_paths[0] }}Setup.EXE'
    arguments: >-
      /IAcceptExchangeServerLicenseTerms_DiagnosticDataOFF
      /mode:Install
      /role:Mailbox
      /OrganizationName:"skt"
      /InstallWindowsComponents
      /DisableAMFiltering
    product_id: '{CD981244-E9B8-405A-9026-6AEB9DCEF1F1}' 
    timeout: 3600
    ignore_unreachable: yes
    state: present
  register: pri_exchange_install
  become: yes 
  become_method: runas
  vars:
    ansible_become_user: 'skt\evals_domain_admin'
    ansible_become_pass: 'DuapQj7k8Va8U1X27rw6'
  async: 7200
  poll: 60 
  when: "'Version' not in exchange_results.stdout"

- name: Reboot Exchange Server
  ansible.windows.win_reboot:
    reboot_timeout: 3600
  when: pri_exchange_install is changed

- name: Check Create Exchange Admin script exists
  win_stat:
    path: C:\Windows\Temp\brieftragerin-create-carbon-exchange-admin.ps1
  register: exchange_admin

- name: Copy Create Exchange Admin Script 
  ansible.windows.win_copy:
    src: files/turla/Resources/setup/files/carbon/brieftragerin-create-carbon-exchange-admin.ps1
    dest: C:\Windows\Temp\brieftragerin-create-carbon-exchange-admin.ps1
  when: exchange_admin.stat.exists == False

- name: Create Exchange Admin
  become: yes
  become_method: runas
  vars:
    ansible_become_user: 'skt\evals_domain_admin'
    ansible_become_pass: 'DuapQj7k8Va8U1X27rw6'
  win_command: powershell.exe -ExecutionPolicy ByPass -File C:\Windows\Temp\brieftragerin-create-carbon-exchange-admin.ps1
  when: "'Version' not in exchange_results.stdout"

- name: Create Exchange Mailbox for Gunter
  become: yes
  become_method: runas
  vars:
    ansible_become_user: 'skt\evals_domain_admin'
    ansible_become_pass: 'DuapQj7k8Va8U1X27rw6'
  win_command: powershell.exe -ExecutionPolicy ByPass -Command Add-PSSnapin Microsoft.Exchange.Management.PowerShell.SnapIn; Enable-Mailbox -Identity Gunter
  when: "'Version' not in exchange_results.stdout"
